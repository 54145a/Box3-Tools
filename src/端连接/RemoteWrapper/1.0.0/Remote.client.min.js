
function RemoteClientWrapper() {let v1 = [], v2 = 2024, v3 = () => (v2 = (v2 * 9301 + 49297) % 233280, parseInt(v2 / 233280.0 * 1000000));function wrap(type, data, id) {return { type, data, id }}function send(t1, t2, t3 = "data") {console.log("sent");remoteChannel.sendServerEvent(wrap(t3, t1, t2));return t2;}function onMessage(t1 = "data", f) {v1.push({ type: t1, handler: f });return { cancel() { v1 = v1.filter(v => v.handler !== f); } }}function communicate(t1, f) {v1.push({type: "communicate", handler: (arg) => {f(arg);v1 = v1.filter(v => v.handler !== f);}, id: send(t1, v3(), "communicate")});}remoteChannel.events.on("client", t1 => {if (t1.type === "communicate") {v1.filter(v => v.type === t1.type).forEach(f => {let v4 = f.handler(t1.data);if (v4.then) v4.then(r => send(r, t1.id));else send(v4, t1.id);});} else if (t1.type === "data") {v1.filter(v => v.type === t1.type).forEach(f => f.handler(t1.data));}});return {send,onMessage,communicate}}
